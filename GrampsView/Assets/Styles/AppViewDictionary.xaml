<ResourceDictionary
    x:Class="GrampsView.Assets.Styles.AppViewDictionary"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:common="clr-namespace:GrampsView.Common">

    <ResourceDictionary.MergedDictionaries>

        <!--  Default dictionary  -->
        <ResourceDictionary Source="SystemThemeDictionary.xaml" />

        <ResourceDictionary Source="_Thickness.xaml" />

        <ResourceDictionary Source="_Sizes.xaml" />

        <!--<ResourceDictionary Source="_FontSizes.xaml" />-->
    </ResourceDictionary.MergedDictionaries>

    <!--
        ******************************************************
        Font Families
        ******************************************************
    -->

    <OnPlatform x:Key="MaterialFontFamily" x:TypeArguments="x:String">
        <On Platform="iOS" Value="Material Design Icons" />
        <On Platform="Android" Value="materialdesignicons-webfont.ttf#Material Design Icons" />
        <On Platform="UWP" Value="Assets/Fonts/materialdesignicons-webfont.ttf#Material Design Icons" />
    </OnPlatform>

    <!--
        ******************************************************
        Borderless Editor Styles
        ******************************************************
    -->

    <!--  Create a Base Style for a Button Style  -->
    <!--
    <Style x:Key="GVEditorStyle" TargetType="ucon:BorderlessEditor">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="BackgroundColor" Value="{DynamicResource SecondaryVariantLightColor}" />
        <Setter Property="AutoSize" Value="TextChanges" />
        <Setter Property="TextColor" Value="{DynamicResource OnSecondaryColor}" />
    </Style>-->

    <!--
        ******************************************************
        Button Styles
        ******************************************************
    -->

    <!--  Create a Base Style for a Button Style  -->
    <Style x:Key="GVButtonStyle" TargetType="Button">
        <Setter Property="BackgroundColor" Value="{DynamicResource SurfaceColor}" />
        <Setter Property="BorderColor" Value="{DynamicResource SurfaceColor}" />
        <Setter Property="BorderRadius" Value="1" />
        <Setter Property="BorderWidth" Value="2" />
        <Setter Property="TextColor" Value="{DynamicResource OnSurfaceColor}" />
        <Setter Property="WidthRequest" Value="{DynamicResource GVDetailCardWidthSmall}" />
    </Style>

    <!--  Create a Menu Style Button Style  -->
    <Style
        x:Key="GVButtonMenu"
        BasedOn="{StaticResource GVButtonStyle}"
        TargetType="Button">
        <Setter Property="BorderRadius" Value="0" />
        <Setter Property="WidthRequest" Value="{DynamicResource GVDetailCardWidthLarge}" />
    </Style>

    <!--  Create a Material Font Style Button Style  -->
    <Style
        x:Key="GVButtonFont"
        BasedOn="{StaticResource GVButtonStyle}"
        TargetType="Button">
        <Setter Property="WidthRequest" Value="40" />
    </Style>

    <!--
        ******************************************************
        ContentPage Styles
        ******************************************************
    -->

    <!--  Create a ContentPage style  -->
    <Style x:Key="GVBaseContentPage" TargetType="ContentPage">
        <Setter Property="BackgroundColor" Value="{DynamicResource BackgroundColor}" />
    </Style>

    <!--
        ******************************************************
        FlexLayout Styles
        ******************************************************
    -->

    <!--  Create a Card Style for a FlexLayout Style  -->
    <Style x:Key="FlexLayoutCards" TargetType="FlexLayout">
        <Setter Property="JustifyContent" Value="Start" />
        <Setter Property="Wrap" Value="Wrap" />
        <Setter Property="Direction" Value="Row" />
        <Setter Property="AlignItems" Value="Start" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="AlignContent" Value="Start" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <!--
        ******************************************************
        Frame Styles
        ******************************************************
    -->

    <!--  Create a Frame Card Style  -->
    <Style x:Key="FrameCardStyle" TargetType="Frame">
        <!--<Setter Property="BorderColor" Value="{DynamicResource SecondaryColor}" />-->
        <Setter Property="BackgroundColor" Value="{DynamicResource SurfaceColor}" />
        <Setter Property="HorizontalOptions" Value="Start" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="CornerRadius" Value="{StaticResource GVCornerRadius}" />
    </Style>

    <Style
        x:Key="FrameCardMediumStyle"
        BasedOn="{StaticResource FrameCardStyle}"
        TargetType="Frame">
        <Setter Property="WidthRequest" Value="{x:Static Member='common:CardWidths.CardMediumWidth'}" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Margin" Value="3" />
    </Style>

    <!--  Create a FrameBottomMenu Style  -->
    <Style x:Key="FrameBottomMenu" TargetType="Frame">
        <Setter Property="BackgroundColor" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="BorderColor" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="HasShadow" Value="False" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="MinimumHeightRequest" Value="40" />
        <Setter Property="HeightRequest" Value="40" />
        <Setter Property="HorizontalOptions" Value="StartAndExpand" />
        <Setter Property="CornerRadius" Value="1" />
    </Style>

    <!--  Create a MediaImage Style  -->
    <Style x:Key="MediaImageStyle" TargetType="Frame">
        <Setter Property="BackgroundColor" Value="{DynamicResource SurfaceVariantDark2Color}" />
        <Setter Property="BorderColor" Value="{DynamicResource SecondaryVariantLightColor}" />
        <Setter Property="HasShadow" Value="False" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="VerticalOptions" Value="Center" />
        <Setter Property="CornerRadius" Value="0" />
    </Style>

    <!--  Create a Small Card Style  -->
    <Style
        x:Key="FrameCardSmallStyle"
        BasedOn="{StaticResource FrameCardStyle}"
        TargetType="Frame">
        <Setter Property="WidthRequest" Value="{x:Static Member='common:CardWidths.CardSmallWidth'}" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Margin" Value="2" />
    </Style>

    <Style
        x:Key="FrameSmallVariableCardStyle"
        BasedOn="{StaticResource FrameCardSmallStyle}"
        TargetType="Frame">
        <Setter Property="MinimumHeightRequest" Value="{DynamicResource GVDetailCardHeightSmall}" />
        <Setter Property="HasShadow" Value="True" />
    </Style>

    <Style
        x:Key="FrameSmallVariableCardStyleNS"
        BasedOn="{StaticResource FrameSmallVariableCardStyle}"
        TargetType="Frame">
        <Setter Property="BorderColor" Value="Transparent" />
    </Style>

    <Style
        x:Key="FrameSmallFixedCardStyle"
        BasedOn="{StaticResource FrameCardSmallStyle}"
        TargetType="Frame">
        <Setter Property="Padding" Value="0" />
        <Setter Property="HeightRequest" Value="{DynamicResource GVDetailCardHeightSmall}" />
    </Style>

    <Style
        x:Key="FrameSmallFixedCardStyleNS"
        BasedOn="{StaticResource FrameSmallFixedCardStyle}"
        TargetType="Frame">
        <Setter Property="BorderColor" Value="Transparent" />
    </Style>

    <!--  Create a Large Card Style  -->

    <Style
        x:Key="FrameCardLargeStyle"
        BasedOn="{StaticResource FrameCardStyle}"
        TargetType="Frame">
        <Setter Property="WidthRequest" Value="{x:Static Member='common:CardWidths.CardLargeWidth'}" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Margin" Value="3" />
    </Style>

    <Style
        x:Key="FrameLargeFixedCardStyle"
        BasedOn="{StaticResource FrameCardLargeStyle}"
        TargetType="Frame">
        <Setter Property="HeightRequest" Value="{DynamicResource GVDetailCardHeightLarge}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource SurfaceColor}" />
    </Style>

    <Style
        x:Key="FrameLargeFixedCardStyleNS"
        BasedOn="{StaticResource FrameLargeFixedCardStyle}"
        TargetType="Frame">
        <Setter Property="BorderColor" Value="Transparent" />
    </Style>

    <!--  Create a Note Full Text Card Style  -->
    <Style
        x:Key="NoteFullTextStyle"
        BasedOn="{StaticResource FrameCardLargeStyle}"
        TargetType="Frame">
        <Setter Property="BackgroundColor" Value="{DynamicResource CardBackGroundNote}" />
        <Setter Property="WidthRequest" Value="{DynamicResource GVDetailCardWidthLarge}" />
    </Style>

    <Style
        x:Key="MediaLargeImageStyle"
        BasedOn="{StaticResource FrameLargeFixedCardStyle}"
        TargetType="Frame">
        <Setter Property="BackgroundColor" Value="{DynamicResource SurfaceVariantDark2Color}" />
    </Style>

    <!--  Create a Variable Height Large Card Style  -->
    <Style
        x:Key="FrameLargeVariableCardStyle"
        BasedOn="{StaticResource FrameCardLargeStyle}"
        TargetType="Frame">
        <Setter Property="BorderColor" Value="{DynamicResource PrimaryColor}" />
    </Style>

    <!--  Create a Variable Height Large Card Style - Not Selectable  -->
    <Style
        x:Key="FrameLargeVariableCardStyleNS"
        BasedOn="{StaticResource FrameCardLargeStyle}"
        TargetType="Frame">
        <Setter Property="BorderColor" Value="Transparent" />
    </Style>

    <!--  Card Group and Flex Cards  -->
    <Style x:Key="CardGroupStyle" TargetType="Frame">
        <Setter Property="HasShadow" Value="False" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="BackgroundColor" Value="{DynamicResource SurfaceVariantDark2Color}" />
        <Setter Property="CornerRadius" Value="{StaticResource GVCornerRadius}" />
    </Style>

    <Style x:Key="FlexSingleCollection" TargetType="Frame">
        <Setter Property="HasShadow" Value="False" />
        <Setter Property="Margin" Value="1,5,1,1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="CornerRadius" Value="{StaticResource GVCornerRadius}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource SurfaceVariantDark2Color}" />
    </Style>

    <Style x:Key="FlexMultiCollection" TargetType="Frame">
        <Setter Property="HasShadow" Value="False" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="CornerRadius" Value="{StaticResource GVCornerRadius}" />
    </Style>

    <Style
        x:Key="BackLinkCollection"
        BasedOn="{StaticResource FlexMultiCollection}"
        TargetType="Frame">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <!--
        ******************************************************
        Grid Styles
        ******************************************************
    -->

    <!--  Create a Base Style for a Grid Style  -->
    <Style x:Key="GridStyle" TargetType="Grid" />

    <Style x:Key="CardImageBackground" TargetType="Grid">
        <Setter Property="Padding" Value="0" />
        <Setter Property="BackgroundColor" Value="{DynamicResource SecondaryVariantLightColor}" />
    </Style>
    <!--
        ******************************************************
        Image  Styles
        ******************************************************
    -->

    <Style x:Key="GVSymbolIconBaseType" TargetType="Image">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="IsEnabled" Value="False" />
    </Style>

    <Style
        x:Key="GVSymbolIconSmallCardType"
        BasedOn="{StaticResource GVSymbolIconBaseType}"
        TargetType="Image">
        <Setter Property="HeightRequest" Value="20" />
        <Setter Property="WidthRequest" Value="20" />
        <Setter Property="VerticalOptions" Value="End" />
        <Setter Property="HorizontalOptions" Value="End" />
        <Setter Property="Margin" Value="0,0,3,3" />
    </Style>

    <Style
        x:Key="GVSymbolIconLargeCardType"
        BasedOn="{StaticResource GVSymbolIconBaseType}"
        TargetType="Image">
        <Setter Property="HeightRequest" Value="30" />
        <Setter Property="WidthRequest" Value="30" />
        <Setter Property="VerticalOptions" Value="End" />
        <Setter Property="HorizontalOptions" Value="End" />
        <Setter Property="Margin" Value="0,0,3,3" />
    </Style>

    <Style
        x:Key="GVSymbolconPageHeaderType"
        BasedOn="{StaticResource GVSymbolIconBaseType}"
        TargetType="Image">
        <Setter Property="VerticalOptions" Value="CenterAndExpand" />
    </Style>

    <Style
        x:Key="GVSymbolcon"
        BasedOn="{StaticResource GVSymbolIconBaseType}"
        TargetType="Image">
        <Setter Property="VerticalOptions" Value="CenterAndExpand" />
    </Style>

    <!--
        ******************************************************
        Image Control Styles
        ******************************************************
    -->
    <!--  Create a Base Style for a Image Control Style  -->
    <Style x:Key="ImageControlStyle" TargetType="Image" />

    <!--
        ******************************************************
        Label Styles
        ******************************************************
    -->

    <!--  Create a Base Style for a Label  -->
    <Style x:Key="GVCardLabelStyle" TargetType="Label">
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="HorizontalOptions" Value="StartAndExpand" />
        <Setter Property="HorizontalTextAlignment" Value="Start" />
        <Setter Property="LineBreakMode" Value="WordWrap" />
        <Setter Property="TextColor" Value="{DynamicResource OnPrimaryColor}" />
    </Style>

    <!--  Create a Small Style for a TextBlock  -->
    <Style
        x:Key="GVCardLabelStyleSmall"
        BasedOn="{StaticResource GVCardLabelStyle}"
        TargetType="Label">
        <Setter Property="Margin" Value="0,0,3,3" />
        <Setter Property="FontSize" Value="Micro" />
    </Style>

    <!--  Create a Large Style for a TextBlock  -->
    <Style
        x:Key="GVLabelStyleLarge"
        BasedOn="{StaticResource GVCardLabelStyle}"
        TargetType="Label">
        <Setter Property="FontSize" Value="Medium" />
        <Setter Property="MaxLines" Value="4" />
    </Style>

    <!--  Create a Instructions Style for a Label  -->
    <Style
        x:Key="GVLabelStyleInstructions"
        BasedOn="{StaticResource GVCardLabelStyle}"
        TargetType="Label">
        <Setter Property="FontSize" Value="Medium" />
        <Setter Property="HorizontalOptions" Value="CenterAndExpand" />
        <Setter Property="TextColor" Value="{DynamicResource OnSurfaceColor}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource PrimaryVariantDarkColor}" />
        <Setter Property="HorizontalTextAlignment" Value="Center" />
    </Style>

    <!--  Create a PageHeader Title Style for a Label  -->
    <Style
        x:Key="GVLabelPageHeaderTitleStyle"
        BasedOn="{StaticResource GVCardLabelStyle}"
        TargetType="Label">
        <Setter Property="LineBreakMode" Value="TailTruncation" />
        <Setter Property="FontSize" Value="Medium" />
        <Setter Property="VerticalTextAlignment" Value="Center" />
        <Setter Property="TextColor" Value="{DynamicResource PrimaryVariantDarkColor}" />
    </Style>

    <!--  Create a Large Style for a Text Block Header  -->
    <Style
        x:Key="GVHeaderStyleLarge"
        BasedOn="{StaticResource GVLabelStyleLarge}"
        TargetType="Label">
        <Setter Property="TextColor" Value="{DynamicResource OnSecondaryColor}" />
    </Style>

    <!--  Create a Large Style for a Full Text Note  -->
    <Style
        x:Key="GVLabelStyleNoteFull"
        BasedOn="{StaticResource GVCardLabelStyle}"
        TargetType="Label">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontSize" Value="Large" />
    </Style>

    <!--
        ******************************************************
        Listview Item Styles
        ******************************************************
    -->

    <!--  Create a Basic Style for a ListView  -->
    <Style x:Key="ListViewBasic" TargetType="ListView" />

    <!--  Create a Label Style for a ListView  -->
    <Style
        x:Key="ListViewLabel"
        BaseResourceKey="ListViewBasic"
        TargetType="ListView">
        <Setter Property="BackgroundColor" Value="Transparent" />
    </Style>

    <!--
        ******************************************************
        TextBlock Styles
        ******************************************************
    -->

    <!--  Create a Large Style for a TextBlock  -->
    <Style x:Key="GVTextBlockStyleLarge" TargetType="Label">
        <Setter Property="IsEnabled" Value="False" />
    </Style>

    <!--
        ******************************************************
        Page Title Styles
        ******************************************************
    -->

    <Style x:Key="GVPageTitleStyle" TargetType="Grid" />
</ResourceDictionary>